#include <memory>

#include "gem/onlinedb/AMC13Configuration.h"
#include "gem/onlinedb/SerializationData.h"

#define BOOST_TEST_DYN_LINK
#define BOOST_TEST_MODULE TestAMC13Configuration
#include <boost/test/unit_test.hpp>

/* Needed to make the linker happy. */
#include <xdaq/version.h>
config::PackageInfo xdaq::getPackageInfo()
{
    return config::PackageInfo("", "", "", "", "", "", "", "");
}

using namespace gem::onlinedb;

BOOST_AUTO_TEST_SUITE(TestAMC13Configuration)

SerializationData<AMC13Configuration> createTestSerializationData()
{
    SerializationData<AMC13Configuration> builder;

    Run r;
    r.location = "Brussels";
    r.initiatingUser = "lmoureau";
    builder.setRun(r);

    DataSet<AMC13Configuration> ds;
    ds.setComment("Test data generated by cmsgemos");
    ds.setVersion("pre-alpha");
    ds.setPart(PartReferenceSN{ "0/0" });
    ds.addData(AMC13Configuration());
    ds.addData(AMC13Configuration());
    builder.addDataSet(ds);

    return builder;
}

BOOST_AUTO_TEST_CASE(ToJSON)
{
    auto data = createTestSerializationData();
    nlohmann::json json = data;

    BOOST_CHECK(json["Root"]["Header"]["Run"]["InitiatedByUser"] == "lmoureau");
    BOOST_CHECK(json["Root"]["Datasets"][0]["Dataset"]["Data"].size() == 2);
}

BOOST_AUTO_TEST_CASE(JSONRoundTrip)
{
    auto data = createTestSerializationData();
    nlohmann::json json = data;
    auto roundTrip = json.get<SerializationData<AMC13Configuration>>();
    BOOST_CHECK(data == roundTrip);
}

BOOST_AUTO_TEST_SUITE_END()
